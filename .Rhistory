source("C:/Users/Placenciohid/Documents/GitHub/ACTSCI657/Homework 4 - Dario Placencio.r")
setwd("~/GitHub/ACTSCI657")
source("C:/Users/Placenciohid/Documents/GitHub/ACTSCI657/Homework 4 - Dario Placencio.r")
library(survival)
# Fit Weibull model to training data
weibull.mod <- survreg(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train, dist = "weibull")
weibull.hazard <- function(x) {
survreg.predict(weibull.mod, newdata = x, type = "lp", se.fit = TRUE)$y
}
# Calculate PITs for test data
test.fitted <- weibull.hazard(dat.test)
test.pits <- pweibull(dat.test$erexp, scale = exp(test.fitted$fit), shape = weibull.mod$scale)
# Calculate PITs for test data
weibull.pits <- pweibull(dat.test$erexp, qweibull(predict(weibull.mod, newdata = dat.test, type = "quantile"), scale = weibull.mod$scale, shape = weibull.mod$shape))
# calculate PITs
dat.test$pit <- predict(weibull.mod, newdata = dat.test, type = "response")
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# Fit Cox proportional hazards model to training data
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "response")
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "lp")
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "risk")
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "expected")
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "terms")
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "survival")
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "lp")
test.prob <- plogis(dat.test$pit)
# plot histogram of PITs
hist(test.prob, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
test.pit <- pit(dat.test$erexp, test.prob)
# Fit Cox proportional hazards model to training data
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "lp")
test.prob <- plogis(dat.test$pit)
# plot histogram of PITs
hist(test.prob, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# Fit Cox proportional hazards model to training data
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# calculate PITs
dat.test$pit <- predict(cox.mod, newdata = dat.test, type = "lp")
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
test.prob <- plogis(dat.test$pit)
# plot histogram of PITs
hist(test.prob, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# read data
rm(list=ls())
dat <- read.table(file='HealthData.txt', header = TRUE, sep = "", dec = ".")
dat.pos <- subset(dat,erexp>0)
set.seed(123)
index <- sample(1:nrow(dat.pos),3000)
dat.train <- dat.pos[index,]
dat.test <- dat.pos[-index,]
# 1. The first modeler’s subject predictive distribution is a gamma model based on information set that contains predictors on demographics (age,female,married, race), health related predictors (limitation, chronic, smoke), social economic factors (edu, log of income, region). Fit this model using training data, and calculate the PITs for observations in the test data. Show the histogram of the PITs (use function hist(,prob=T)).
library(MASS)
library(ggplot2)
library(reshape2)
library(ggpubr)
library(ggExtra)
library(ggthemes)
# fit model
gamma.mod <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train, family = Gamma(link = "log"))
# Predict for test data
dat.test$pit <- predict(gamma.mod, newdata = dat.test, type = "lp")
# Predict for test data
dat.test$pit <- predict(gamma.mod, newdata = dat.test, type = "link")
# calculate the probability integral transform (PIT) for the test data
dat.test$pit <- pchisq(qchisq(dat.test$pit, df = 2), df = 1)
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# read data
rm(list=ls())
dat <- read.table(file='HealthData.txt', header = TRUE, sep = "", dec = ".")
dat.pos <- subset(dat,erexp>0)
set.seed(123)
index <- sample(1:nrow(dat.pos),3000)
dat.train <- dat.pos[index,]
dat.test <- dat.pos[-index,]
# 1. The first modeler’s subject predictive distribution is a gamma model based on information set that contains predictors on demographics (age,female,married, race), health related predictors (limitation, chronic, smoke), social economic factors (edu, log of income, region). Fit this model using training data, and calculate the PITs for observations in the test data. Show the histogram of the PITs (use function hist(,prob=T)).
library(MASS)
library(ggplot2)
library(reshape2)
library(ggpubr)
library(ggExtra)
library(ggthemes)
# fit model
gamma.mod <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train, family = Gamma(link = "log"))
# Predict for test data
dat.test$pit <- predict(gamma.mod, newdata = dat.test, type = "response")
# calculate the probability integral transform (PIT) for the test data
dat.test$pit <- pexp(dat.test$pit, rate = 1)
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# calculate the probability integral transform (PIT) for the test data
dat.test$pit <- pexp(dat.test$pit, rate = 5)
# plot histogram of PITs
hist(dat.test$pit, prob = T, main = "Histogram of PITs", xlab = "PITs", ylab = "Frequency", col = "lightblue")
# read data
rm(list=ls())
dat <- read.table(file='HealthData.txt', header = TRUE, sep = "", dec = ".")
dat.pos <- subset(dat,erexp>0)
set.seed(123)
index <- sample(1:nrow(dat.pos),3000)
dat.train <- dat.pos[index,]
dat.test <- dat.pos[-index,]
# 1. The first modeler’s subject predictive distribution is a gamma model based on information set that contains predictors on demographics (age,female,married, race), health related predictors (limitation, chronic, smoke), social economic factors (edu, log of income, region). Fit this model using training data, and calculate the PITs for observations in the test data. Show the histogram of the PITs (use function hist(,prob=T)).
library(MASS)
library(ggplot2)
# Fit a gamma GLM model with log link
glm_gamma <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, family = Gamma(link = "log"))
# Predict the test dataset
preds_test <- predict(glm_gamma, newdata = dat.test, type = "response")
View(glm_gamma)
View(glm_gamma)
glm_gamma(summary)
summary(glm_gamma)
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = 3.302751, scale = preds_test/3.302751)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
gamma_shape <- gamma.shape(glm_gamma)
View(gamma_shape)
# read data
rm(list=ls())
dat <- read.table(file='HealthData.txt', header = TRUE, sep = "", dec = ".")
dat.pos <- subset(dat,erexp>0)
set.seed(123)
index <- sample(1:nrow(dat.pos),3000)
dat.train <- dat.pos[index,]
dat.test <- dat.pos[-index,]
# 1. The first modeler’s subject predictive distribution is a gamma model based on information set that contains predictors on demographics (age,female,married, race), health related predictors (limitation, chronic, smoke), social economic factors (edu, log of income, region). Fit this model using training data, and calculate the PITs for observations in the test data. Show the histogram of the PITs (use function hist(,prob=T)).
library(MASS)
library(ggplot2)
# Fit a gamma GLM model with log link
glm_gamma <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, family = Gamma(link = "log"))
# Calculate Gamma Shape
gamma_shape <- gamma.shape(glm_gamma)
# Predict the test dataset
preds_test <- predict(glm_gamma, newdata = dat.test, type = "response", se = TRUE, dispersion = 1/gamma_shape$alpha)
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = gamma_shape$alpha, scale = preds_test/gamma_shape$alpha)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Fit a gamma GLM model with log link
glm_gamma <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, family = Gamma(link = "log"))
# Calculate Gamma Shape
gamma_shape <- gamma.shape(glm_gamma)
# Predict the test dataset
preds_test <- predict(glm_gamma, newdata = dat.test, type = "response", se = TRUE, dispersion = 1/gamma_shape$alpha)
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = gamma_shape$alpha, scale = preds_test/gamma_shape$alpha)
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = gamma_shape$alpha, scale = 1/gamma_shape$alpha)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = gamma_shape$alpha, scale = preds_test/gamma_shape$alpha)
# Fit a gamma GLM model with log link
glm_gamma <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, family = Gamma(link = "log"))
# read data
rm(list=ls())
dat <- read.table(file='HealthData.txt', header = TRUE, sep = "", dec = ".")
dat.pos <- subset(dat,erexp>0)
set.seed(123)
index <- sample(1:nrow(dat.pos),3000)
dat.train <- dat.pos[index,]
dat.test <- dat.pos[-index,]
# 1. The first modeler’s subject predictive distribution is a gamma model based on information set that contains predictors on demographics (age,female,married, race), health related predictors (limitation, chronic, smoke), social economic factors (edu, log of income, region). Fit this model using training data, and calculate the PITs for observations in the test data. Show the histogram of the PITs (use function hist(,prob=T)).
library(MASS)
library(ggplot2)
# Fit a gamma GLM model with log link
glm_gamma <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, family = Gamma(link = "log"))
# Predict the test dataset
preds_test <- predict(glm_gamma, newdata = dat.test, type = "response")
# Compute the gamma shape parameter
gamma_shape <- summary(glm_gamma)$dispersion
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = gamma_shape, scale = preds_test/gamma_shape)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
library(survival)
# Fit a Weibull hazard model
weibull_fit <- survreg(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, dist = "weibull")
# Predict the test dataset
preds_test <- predict(weibull_fit, newdata = dat.test, type = "response")
# Calculate the PITs
pits_test <- pweibull(dat.test$erexp, shape = weibull_fit$scale, scale = preds_test/weibull_fit$scale)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Fit a Cox hazard model
cox_fit <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train)
# Predict the test dataset
preds_test <- predict(cox_fit, newdata = dat.test, type = "risk")
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = preds_test)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Fit Cox proportional hazards model to training data
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.lp <- predict(cox.mod, newdata = dat.test, type = "lp")
# Transform linear predictor into probability using logistic function
test.prob <- plogis(test.lp)
# Calculate PITs for test data
test.pit <- pit(dat.test$erexp, test.prob)
# Plot histogram of PITs
hist(test.pit, prob = TRUE, main = "Histogram of PITs")
# fit model
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.lp <- predict(cox.mod, newdata = dat.test, type = "lp")
# Transform linear predictor into probability using logistic function
test.prob <- plogis(test.lp)
# Calculate PITs
test.pits <- pnorm(test.lp)
# Plot histogram
hist(test.pits, prob = T, main = "Histogram of PITs for Cox Hazard Model", xlab = "PITs", ylab = "Frequency")
# Plot histogram
hist(test.prob, prob = T, main = "Histogram of PITs for Cox Hazard Model", xlab = "PITs", ylab = "Frequency")
# Plot histogram
hist(test.pits, prob = T, main = "Histogram of PITs for Cox Hazard Model", xlab = "PITs", ylab = "Frequency")
source("C:/Users/Placenciohid/Documents/GitHub/ACTSCI657/Homework 4 - Dario Placencio.r")
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, pred_test, shape = gamma_shape, scale = preds_test/gamma_shape)
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, preds_test, shape = gamma_shape, scale = preds_test/gamma_shape)
# read data
rm(list=ls())
dat <- read.table(file='HealthData.txt', header = TRUE, sep = "", dec = ".")
dat.pos <- subset(dat,erexp>0)
set.seed(123)
index <- sample(1:nrow(dat.pos),3000)
dat.train <- dat.pos[index,]
dat.test <- dat.pos[-index,]
# 1. The first modeler’s subject predictive distribution is a gamma model based on information set that contains predictors on demographics (age,female,married, race), health related predictors (limitation, chronic, smoke), social economic factors (edu, log of income, region). Fit this model using training data, and calculate the PITs for observations in the test data. Show the histogram of the PITs (use function hist(,prob=T)).
library(MASS)
library(ggplot2)
# Fit a gamma GLM model with log link
glm_gamma <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, family = Gamma(link = "log"))
# Predict the test dataset
preds_test <- predict(glm_gamma, newdata = dat.test, type = "response")
# Compute the gamma shape parameter
gamma_shape <- summary(glm_gamma)$dispersion
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, preds_test, shape = gamma_shape, scale = preds_test/gamma_shape)
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = gamma_shape, scale = preds_test/gamma_shape)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs for Gamma Model")
library(survival)
# Fit a Weibull hazard model
weibull_fit <- survreg(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, dist = "weibull")
# Predict the test dataset
preds_test <- predict(weibull_fit, newdata = dat.test, type = "response")
# Calculate the PITs
pits_test <- pweibull(dat.test$erexp, shape = weibull_fit$scale, scale = preds_test/weibull_fit$scale)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs for Weibull Model")
# fit model
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.lp <- predict(cox.mod, newdata = dat.test, type = "lp")
# Transform linear predictor into probability using logistic function
test.prob <- plogis(test.lp)
# Calculate PITs
test.pits <- pnorm(test.lp)
# Plot histogram
hist(test.pits, prob = T, main = "Histogram of PITs for Cox Hazard Model", xlab = "PITs", ylab = "Frequency")
# fit model
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.lp <- predict(cox.mod, newdata = dat.test, type = "risk")
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = preds_test)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Calculate linear predictor for test data
test.lp <- predict(cox.mod, newdata = dat.test, type = "response")
# Calculate linear predictor for test data
test.lp <- predict(cox.mod, newdata = dat.test, type = "expected")
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = preds_test)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Calculate linear predictor for test data
test.lp <- predict(cox.mod, newdata = dat.test, type = "survival")
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = preds_test)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# fit model
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.cox <- predict(cox.mod, newdata = dat.test, type = "survival")
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = test.cox)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# fit model
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.cox <- predict(cox.mod, newdata = dat.test, type = "risk")
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = test.cox)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# fit model
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.cox <- predict(cox.mod, newdata = dat.test, type = "risk")
# Calculate the PITs
pits_test <- pnorm(dat.test$erexp, rate = test.cox)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Calculate the PITs
pits_test <- pchisq(test.cox, df = 1, lower.tail = FALSE)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
# Calculate the PITs
pits_test <- pchisq(test.cox, df = 1, lower.tail = FALSE, rate = test.cox)
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = test.cox)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(ggplot2)
# read data
rm(list=ls())
dat <- read.table(file='HealthData.txt', header = TRUE, sep = "", dec = ".")
dat.pos <- subset(dat,erexp>0)
set.seed(123)
index <- sample(1:nrow(dat.pos),3000)
dat.train <- dat.pos[index,]
dat.test <- dat.pos[-index,]
# Fit a gamma GLM model with log link
glm_gamma <- glm(erexp ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, family = Gamma(link = "log"))
# Predict the test dataset
preds_test <- predict(glm_gamma, newdata = dat.test, type = "response")
# Compute the gamma shape parameter
gamma_shape <- summary(glm_gamma)$dispersion
# Calculate the PITs
pits_test <- pgamma(dat.test$erexp, shape = gamma_shape, scale = preds_test/gamma_shape)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs for Gamma Model")
library(survival)
# Fit a Weibull hazard model
weibull_fit <- survreg(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region,
data = dat.train, dist = "weibull")
# Predict the test dataset
preds_test <- predict(weibull_fit, newdata = dat.test, type = "response")
# Calculate the PITs
pits_test <- pweibull(dat.test$erexp, shape = weibull_fit$scale, scale = preds_test/weibull_fit$scale)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs for Weibull Model")
# fit model
cox.mod <- coxph(Surv(erexp) ~ age + female + married + race + limitation + chronic + smoke + edu + log(income) + region, data = dat.train)
# Calculate linear predictor for test data
test.cox <- predict(cox.mod, newdata = dat.test, type = "risk")
# Calculate the PITs
pits_test <- pexp(dat.test$erexp, rate = test.cox)
# Plot the histogram of PITs
hist(pits_test, prob = TRUE, main = "Histogram of PITs")
