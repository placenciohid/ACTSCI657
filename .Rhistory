source("~/GitHub/ACTSCI657/Homework 3 - Dario Placencio.r")
setwd("~/GitHub/ACTSCI657")
source("~/GitHub/ACTSCI657/Homework 3 - Dario Placencio.r")
source("C:/Users/Placenciohid/Documents/GitHub/ACTSCI657/HW3 Patrick.R")
source("~/GitHub/ACTSCI657/Homework 3 - Dario Placencio.r")
# Estimate the survival function using Kaplan-Meier method
km_fit <- survfit(surv_obj ~ 1, data = dat.loss, type = "kaplan-meier")
summary(km_fit, times = 100000)
# Calculate the probability of an annual loss greater than $100,000
prob_gt100k <- 1 - summary(km_fit, times = 0.1 / cov_amt)$surv
# Print the probability of an annual loss greater than $100,000
cat("The probability of an annual loss greater than $100,000 for the Madison School District is",
round(prob_gt100k, 4) * 100, "%.")
# Calculate the probability of an annual loss greater than $100,000
prob_gt100k <- 1 - summary(km_fit, times = 100000 / cov_amt)$surv
knitr::opts_chunk$set(echo = TRUE)
# read data
rm(list=ls())
dat <- read.table(file='PropertyFund.txt', header = TRUE, sep = "", dec = ".")
dat.loss <- dat[which(dat$Claim>0),]
library(survival)
# Create a survival object
surv_obj <- Surv(dat.loss$Claim)
# Estimate the survival function using Kaplan-Meier method
km_fit <- survfit(surv_obj ~ 1, data = dat.loss, type = "kaplan-meier")
# Plot the estimated survival function
plot(km_fit, xlab = "Loss Amount", ylab = "Survival Probability",
main = "Kaplan-Meier Estimation of Loss Amount Survival Function")
summary(km_fit, times = 100000)
# Set the coverage amount for the Madison School District
cov_amt <- 500
# Calculate the probability of an annual loss greater than $100,000
prob_gt100k <- 1 - summary(km_fit, times = 100000 / cov_amt)$surv
# Print the probability of an annual loss greater than $100,000
cat("The probability of an annual loss greater than $100,000 for the Madison School District is",
round(prob_gt100k, 4) * 100, "%.")
# Fit Weibull regression model
weib_reg <- survreg(Surv(Claim) ~ factor(EntityType) + log(Coverage), data = dat.loss, dist = "weibull")
# Report estimated parameters
summary(weib_reg)
# Calculate the linear predictor
lin_pred <- sum(coef(weib_reg) * c(1, 0, 0, 1, 0, log(500)))
# Use the Weibull distribution's survival and density functions to obtain the hazard and cumulative hazard functions:
beta_hat <- coef(weib_reg)[7]
eta_hat <- exp(lin_pred)
hazard_function <- function(t) {
beta_hat * eta_hat * t ^ (beta_hat - 1)
}
cumulative_hazard_function <- function(t) {
(eta_hat * t) ^ beta_hat
}
# Plot the hazard and cumulative hazard functions
library(ggplot2)
# plot hazard function
ggplot(data.frame(t = seq(0, 6, 0.01)), aes(x = t)) +
geom_line(aes(y = hazard_function(t))) +
labs(x = "Time (years)", y = "Hazard function")
# plot cumulative hazard function
ggplot(data.frame(t = seq(0, 6, 0.01)), aes(x = t)) +
geom_line(aes(y = cumulative_hazard_function(t))) +
labs(x = "Time (years)", y = "Cumulative hazard function")
# calculate the expected claim amount using the estimated regression coefficients and the given predictor values
entity_type <- "School"
coverage <- 500
log_coverage <- log(coverage)
lin_pred <- sum(coef(weib_reg) * c(1, as.numeric(entity_type != levels(dat.loss$EntityType)), log_coverage))
eta_hat <- exp(lin_pred)
beta_hat <- coef(weib_reg)[7]
expected_claim <- eta_hat * gamma(1 + 1 / beta_hat)
# calculate the probability of an annual loss greater than $100,000 using the estimated regression coefficients and the given predictor values
prob_loss_100k <- 1 - pweibull(100000, scale = eta_hat, shape = beta_hat)
prob_loss_100k
# calculate the expected claim amount using the estimated regression coefficients and the given predictor values
entity_type <- "School"
coverage <- 500
log_coverage <- log(coverage)
lin_pred <- sum(coef(weib_reg) * c(1, as.numeric(entity_type != levels(dat.loss$EntityType)), log_coverage))
eta_hat <- exp(lin_pred)
beta_hat <- coef(weib_reg)[7]
expected_claim <- eta_hat * gamma(1 + 1 / beta_hat)
# calculate the probability of an annual loss greater than $100,000
prob_loss_100k <- 1 - pweibull(100000, scale = eta_hat, shape = beta_hat)
# Print the probability of an annual loss greater than $100,000
cat("The probability of an annual loss greater than $100,000 using the estimated regression coefficients and the given predictor values is",
round(prob_loss_100k, 4) * 100, "%.")
