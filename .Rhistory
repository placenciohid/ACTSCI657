prob_expenditure_above_2500_large <- mean(expenditure_above_2500_large)
prob_expenditure_above_2500_large
# Define the individual's characteristics as a new data frame
new_data <- data.frame(limitation = 0, chronic = 2, age = 50, race = 2, income = log(100000))
# Use the predict function to estimate the expected value of erexp
expected_erexp_large <- predict(large_model, data = new_data, type = "response")
# Convert expected_erexp to a binary variable indicating whether expenditure is greater than $2,500
expenditure_above_2500_large <- ifelse(expected_erexp_large > 2500, 1, 0)
# Calculate the probability of expenditure above $2,500
prob_expenditure_above_2500_large <- mean(expenditure_above_2500_large)
prob_expenditure_above_2500_large
# Define the individual's characteristics as a new data frame
new_data <- data.frame(limitation = 0, chronic = 2, age = 50, race = 2, income = 100000)
# Use the predict function to estimate the expected value of erexp
expected_erexp_large <- predict(large_model, data = new_data, type = "response")
# Convert expected_erexp to a binary variable indicating whether expenditure is greater than $2,500
expenditure_above_2500_large <- ifelse(expected_erexp_large > 2500, 1, 0)
# Calculate the probability of expenditure above $2,500
prob_expenditure_above_2500_large <- mean(expenditure_above_2500_large)
prob_expenditure_above_2500_large
# Define the individual's characteristics as a new data frame
new_data <- data.frame(limitation = 0, chronic = 2, age = 50, race = 2, income = 100000)
# Use the predict function to estimate the expected value of erexp
expected_erexp_large <- predict(large_model, data = new_data, type = "response")
# Convert expected_erexp to a binary variable indicating whether expenditure is greater than $2,500
expenditure_above_2500_large <- ifelse(expected_erexp_large > 2500, 1, 0)
# Calculate the probability of expenditure above $2,500
prob_expenditure_above_2500_large <- mean(expenditure_above_2500_large)
prob_expenditure_above_2500_large
# Define the individual's characteristics as a new data frame
new_data <- data.frame(limitation = 0, chronic = 2, age = 50, race = 2, income = 100000)
# Use the predict function to estimate the expected value of erexp
expected_erexp_large <- predict(large_model, data = new_data, type = "response")
# Convert expected_erexp to a binary variable indicating whether expenditure is greater than $2,500
expenditure_above_2500_large <- ifelse(expected_erexp_large > 2500, 1, 0)
# Calculate the probability of expenditure above $2,500
prob_expenditure_above_2500_large <- mean(expenditure_above_2500_large)
prob_expenditure_above_2500_large
knitr::opts_chunk$set(echo = TRUE)
# Load the HealthData set and take a look at the data.
data <- read.table("HealthData.txt", header = TRUE)
head(data)
# Take a subset of the data that contain observations with positive expenditure. Answer the follow questions based on the subset.
data <- data[data$erexp > 0,]
head(data)
summary(data$erexp)
hist(data$erexp)
# Import the library MASS and use the function gam to fit a small gamma regression using erexp as the response variable and age as the predictor.
library(MASS)
model <- glm(erexp ~ limitation + chronic, data = data, family = Gamma(link = "log"))
summary(model)
model <- glm(erexp ~ limitation + chronic + age + race + log(income), family = Gamma(link = "log"), data = data)
summary(model)
# For the smaller model, we have:
small_model <- glm(formula = erexp ~ limitation + chronic, family = Gamma(link = "log"),
data = data)
# And for the larger model, we have:
large_model <- glm(formula = erexp ~ limitation + chronic + age + race + log(income),
family = Gamma(link = "log"), data = data)
# Define the individual's characteristics as a new data frame
new_data <- data.frame(limitation = 0, chronic = 2)
# Add the constant term to the data frame to match the model
new_data$intercept <- 1
# Use the predict function to estimate the expected value of erexp
expected_erexp_small <- predict(small_model, data = new_data, type = "response")
# Convert expected_erexp to a binary variable indicating whether expenditure is greater than $2,500
expenditure_above_2500_small <- ifelse(expected_erexp_small > 2500, 1, 0)
# Calculate the probability of expenditure above $2,500
prob_expenditure_above_2500_small <- mean(expenditure_above_2500_small)
prob_expenditure_above_2500_small
# Define the individual's characteristics as a new data frame
new_data <- data.frame(limitation = 0, chronic = 2, age = 50, race = 2, income = 100000)
# Use the predict function to estimate the expected value of erexp
expected_erexp_large <- predict(large_model, data = new_data, type = "response")
# Convert expected_erexp to a binary variable indicating whether expenditure is greater than $2,500
expenditure_above_2500_large <- ifelse(expected_erexp_large > 2500, 1, 0)
# Calculate the probability of expenditure above $2,500
prob_expenditure_above_2500_large <- mean(expenditure_above_2500_large)
prob_expenditure_above_2500_large
unlink("#Homework 2 - Dario Placencio_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
knitr::opts_chunk$set(echo = TRUE)
# Read the data
rm(list=ls())
dat <- read.table("PropertyFund.txt", header = TRUE, sep = "", dec = ".")
dat.loss <- dat[which(dat$Claim>0),]
# Preview dat.loss
head(dat.loss)
library("survival")
# perform Nelson Aalen estimation of the cumulative hazard function
survObj <- Surv(dat.loss$Claim)
naEst <- survfit(survObj ~ 1, type = "fleming")
cumHazard <- -log(naEst$surv)
# plot the estimated cumulative hazard function
plot(naEst$time, cumHazard, type = "l", xlab = "Time", ylab = "Cumulative Hazard", main = "Nelson Aalen Estimation of Cumulative Hazard Function")
# Evaluate the cumulative hazard at 100,000
time_points <- naEst$time
cumHazard_points <- -log(naEst$surv)
hazard_at_100000 <- approx(x = time_points, y = cumHazard_points, xout = 100000)$y
hazard_at_100000
# estimate the survival function at 100,000
surv_at_100000 <- exp(-hazard_at_100000)
surv_at_100000
# fit a Cox regression on the loss amount using entity type and logarithm of coverage as predictors
cox_mod <- coxph(Surv(Claim) ~ EntityType + log(Coverage), data = dat.loss)
# report the estimated parameters
summary(cox_mod)
# nonparametric estimates of the baseline cumulative hazard function
base_haz <- survfit(cox_mod, type = "fleming")
# plot the baseline cumulative hazard function
plot(base_haz, xlab = "Claim Amount", ylab = "Cumulative Hazard Function", main = "Nonparametric Estimate of Baseline Cumulative Hazard")
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- exp(-H0func(t))^(exp(risk_pred))
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- (exp(risk_pred))
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- (exp(risk_pred))
St
# forecast the probability of an annual loss greater than 100,000 dollars
St <- exp(-hazard_at_100000)^(exp(risk_pred))
St
# forecast the probability of an annual loss greater than 100,000 dollars
St <- exp(-t)^(exp(risk_pred))
St
# forecast the probability of an annual loss greater than 100,000 dollars
St = 1 - risk_pred
St
1- -0.5061072
knitr::opts_chunk$set(echo = TRUE)
# Preview dat.loss
head(dat.loss)
dat <- read.table("PropertyFund.txt", header = TRUE, sep = "", dec = ".")
dat.loss <- dat[which(dat$Claim>0),]
RUN
# Read the data
rm(list=ls())
dat <- read.table("PropertyFund.txt", header = TRUE, sep = "", dec = ".")
dat.loss <- dat[which(dat$Claim>0),]
# Preview dat.loss
head(dat.loss)
knitr::opts_chunk$set(echo = TRUE)
# Read the data
rm(list=ls())
dat <- read.table("PropertyFund.txt", header = TRUE, sep = "", dec = ".")
dat.loss <- dat[which(dat$Claim>0),]
# Preview dat.loss
head(dat.loss)
library("survival")
# perform Nelson Aalen estimation of the cumulative hazard function
survObj <- Surv(dat.loss$Claim)
naEst <- survfit(survObj ~ 1, type = "fleming")
cumHazard <- -log(naEst$surv)
# plot the estimated cumulative hazard function
plot(naEst$time, cumHazard, type = "l", xlab = "Time", ylab = "Cumulative Hazard", main = "Nelson Aalen Estimation of Cumulative Hazard Function")
# Evaluate the cumulative hazard at 100,000
time_points <- naEst$time
cumHazard_points <- -log(naEst$surv)
hazard_at_100000 <- approx(x = time_points, y = cumHazard_points, xout = 100000)$y
hazard_at_100000
# estimate the survival function at 100,000
surv_at_100000 <- exp(-hazard_at_100000)
surv_at_100000
# fit a Cox regression on the loss amount using entity type and logarithm of coverage as predictors
cox_mod <- coxph(Surv(Claim) ~ EntityType + log(Coverage), data = dat.loss)
# report the estimated parameters
summary(cox_mod)
# nonparametric estimates of the baseline cumulative hazard function
base_haz <- survfit(cox_mod, type = "fleming")
# plot the baseline cumulative hazard function
plot(base_haz, xlab = "Claim Amount", ylab = "Cumulative Hazard Function", main = "Nonparametric Estimate of Baseline Cumulative Hazard")
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - pexp(100000, rate = risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- pexp(100000, rate = risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- pexp(100000, rate = risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - pexp(t, rate = risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - exp(t, rate = risk_pred)
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - pexp(t, rate = risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - base_haz$surv[base_haz$time == 100000]^exp(risk_pred)
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
risk_pred = as.numeric(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - base_haz$surv[base_haz$time == 100000]^exp(risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - base_haz$surv[base_haz$time == 100000]^exp(risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - base_haz$surv[base_haz$time == 100000]^exp(risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "School", times = t)
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- 1 - base_haz$surv[base_haz$time == 100000]^exp(risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- base_haz$surv[base_haz$time == 100000]^exp(risk_pred)
St
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
St <- [base_haz$time == 100000]^exp(risk_pred)
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
1- risk_pred
# forecast the probability of an annual loss greater than 100,000 dollars
risk_pred
# forecast the probability of an annual loss greater than 100,000 dollars
exp(risk_pred)
# forecast the probability of an annual loss greater than 100,000 dollars
exp(1-risk_pred)
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
prob_loss_gt_100k <- 1 - pnorm(log(100000), mean = risk_pred, sd = summary(cox_mod)$var)
# create a new data frame with the covariate values for the Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# use the cox regression model to predict the risk of an annual loss greater than 100,000 dollars
t <- 100000
risk_pred <- predict(cox_mod, newdata = newdat, type = "risk", times = t)
# forecast the probability of an annual loss greater than 100,000 dollars
prob_loss_gt_100k <- 1 - pnorm(log(100000), mean = risk_pred)
prob_loss_gt_100k
# extract the coefficients from the Cox regression model
coef_cox <- coef(cox_mod)
# calculate the linear predictor for the Madison School District with Coverage = log(500)
reg <- coef_cox["EntityTypeSchool"] * 1 + coef_cox["log(Coverage)"] * log(500)
# evaluate the survival function at t = 100,000
t <- 100000
H0_t <- -log(base_haz$surv[which(base_haz$time == t)])
S_t <- exp(-H0_t^(exp(reg)))
# estimate the probability of an annual loss greater than 100,000 dollars
1 - S_t
sum(dat.loss$EntityType == "School" & round(log(dat.loss$Coverage),2) == log(500))
# adjust newdat
newdat$EntityType <- "School"
newdat$Coverage <- 500
# extract the coefficients from the Cox regression model
coef_cox <- coef(cox_mod)
# calculate the linear predictor for the Madison School District with Coverage = log(500)
reg <- coef_cox["EntityTypeSchool"] * 1 + coef_cox["log(Coverage)"] * log(500)
# evaluate the survival function at t = 100,000
t <- 100000
H0_t <- -log(base_haz$surv[which(base_haz$time == t)])
S_t <- exp(-H0_t^(exp(reg)))
# estimate the probability of an annual loss greater than 100,000 dollars
1 - S_t
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- coefcox["factor(EntityType)School"] * 1 + coefcox["log(Coverage)"] * log(500)
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- coef_mod["factor(EntityType)School"] * 1 + coefcox["log(Coverage)"] * log(500)
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- coef_mod["factor(EntityType)School"] * 1 + coef_mod["log(Coverage)"] * log(500)
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- cox_mod["factor(EntityType)School"] * 1 + cox_mod["log(Coverage)"] * log(500)
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- coef_cox["factor(EntityType)School"] * 1 + coef_cox["log(Coverage)"] * log(500)
reg <- as.numeric(reg)
# Define the baseline survival function
H0func <- function(t) {
survfitcox <- survfit(fit.cox, newdata = newdat)
summary(survfitcox, times = t)$surv
}
# Compute the survival probability at time t
t <- 100000
St <- exp(-H0func(t))^(exp(reg))
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- coef_cox["factor(EntityType)School"] * 1 + coef_cox["log(Coverage)"] * log(500)
reg <- as.numeric(reg)
# Define the baseline survival function
H0func <- function(t) {
survfitcox <- survfit(fit.cox_mod, newdata = newdat)
summary(survfitcox, times = t)$surv
}
# Compute the survival probability at time t
t <- 100000
St <- exp(-H0func(t))^(exp(reg))
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- coef_cox["factor(EntityType)School"] * 1 + coef_cox["log(Coverage)"] * log(500)
reg <- as.numeric(reg)
# Define the baseline survival function
H0func <- function(t) {
survfitcox <- survfit(fit.coef_cox, newdata = newdat)
summary(survfitcox, times = t)$surv
}
# Compute the survival probability at time t
t <- 100000
St <- exp(-H0func(t))^(exp(reg))
# Create a new data frame with predictor variables for prediction
newdat <- data.frame(
EntityType = "School",
Coverage = 500
)
# Compute the predicted survival probability at time t=100000
reg <- coef_cox["factor(EntityType)School"] * 1 + coef_cox["log(Coverage)"] * log(500)
reg <- as.numeric(reg)
# Define the baseline survival function
H0func <- function(t) {
survfitcox <- survfit(fit.cox, newdata = newdat)
summary(survfitcox, times = t)$surv
}
# Compute the survival probability at time t
t <- 100000
St <- exp(-H0func(t))^(exp(reg))
# Get coefficients of Cox model
cox_mod$coef
coef_cox <- coef(cox_mod)
# Define variables
EntityType_School <- 1
Coverage_500 <- log(500)
# Calculate hazard ratio
reg <- coef_cox["factor(EntityType)School"] * EntityType_School + coef_cox["log(Coverage)"] * Coverage_500
t <- 100000
St <- exp(-H0func(t))^(exp(reg))
# Set up the new data for Madison School District
newdat <- data.frame(EntityType = "School", Coverage = log(500))
# Calculate the log hazard ratio for the Madison School District
coefcox <- coef(cox_mod)
log_hr <- coefcox["factor(EntityType)School"] + coefcox["log(Coverage)"] * newdat$Coverage
# Define the survival probability function
H0func <- function(t){
exp(-sum(coefcox[k] * t^k))
}
# Calculate the survival probability at t=1 year
St_1year <- exp(-H0func(1))^(exp(log_hr))
# Define k as the number of covariates in the Cox model
k <- length(coef(fit.cox))
# Define k as the number of covariates in the Cox model
k <- length(coef(cox_mod))
# Define H0func function
H0func <- function(t) {
sum(coef(cox_mod)[-1] * sapply(seq_along(newdat)[-1], function(j) {
prod(exp(coef(cox_mod)[seq_len(j)] * newdat[1, seq_len(j)]) - 1)
})) * t ^ k
}
# Calculate probability of losses greater than 100,000 dollars
reg <- coefcox["factor(EntityType)School"] * 1 + coefcox["log(Coverage)"] * log(500)
reg <- as.numeric(reg)
St <- exp(-H0func(1)) ^ (exp(reg))
class(H0func(1))
class(H0func(1))
class(H0func(1))
# Define k as the number of covariates in the Cox model
k <- length(coef(cox_mod))
# Define H0func function
H0func <- function(t) {
(1/k) * (log(1 + k*lambda*t) - (k*lambda*t)/(1 + k*lambda*t))
}
# Calculate probability of losses greater than 100,000 dollars
reg <- coefcox["factor(EntityType)School"] * 1 + coefcox["log(Coverage)"] * log(500)
reg <- as.numeric(reg)
St <- exp(-H0func(1)) ^ (exp(reg))
lambda <- base_haz$hazard[base_haz$time == 1]
# Define k as the number of covariates in the Cox model
k <- length(coef(cox_mod))
# Define H0func function
H0func <- function(t) {
(1/k) * (log(1 + k*lambda*t) - (k*lambda*t)/(1 + k*lambda*t))
}
# Calculate probability of losses greater than 100,000 dollars
reg <- coefcox["factor(EntityType)School"] * 1 + coefcox["log(Coverage)"] * log(500)
reg <- as.numeric(reg)
St <- exp(-H0func(1)) ^ (exp(reg))
1 - St
exp(-H0func(1))
